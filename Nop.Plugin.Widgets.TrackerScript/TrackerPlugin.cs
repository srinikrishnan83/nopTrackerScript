using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Nop.Core;
using Nop.Core.Http;
using Nop.Services.Cms;
using Nop.Services.Configuration;
using Nop.Services.Localization;
using Nop.Services.Logging;
using Nop.Services.Plugins;

namespace Nop.Plugin.Widgets.TrackerScript
{
    public class TrackerPlugin : BasePlugin, IWidgetPlugin
    {
        private readonly IWebHelper _webHelper;
        private readonly ISettingService _settingService;
        private readonly IWorkContext _workContext;
        private readonly IStoreContext _storeContext;
        private readonly ILocalizationService _localizationService;

        private readonly IHttpClientFactory _httpClientFactory;
        private readonly ILogger _logger;


        public const string DEFAULT_TRACKINGSCRIPT = "";
        public const string DEFAULT_CONVERSIONSCRIPT = "";
        public const string DEFAULT_REMARKETINGSCRIPT = "";

		public bool HideInWidgetList => false;

		public TrackerPlugin(
            IWebHelper webHelper, 
            ISettingService settingService,
            IWorkContext workContext, 
            IStoreContext storeContext,  
            ILocalizationService localizationService,
            IHttpClientFactory httpClientFactory,
            ILogger logger
            )
        {
            _webHelper = webHelper;
            _settingService = settingService;
            _workContext = workContext;
            _storeContext = storeContext;
            _localizationService = localizationService;
            _httpClientFactory = httpClientFactory;
            _logger = logger;
        }
      
        public string GetWidgetViewComponentName(string widgetZone)
        {
            return "WidgetsTracker";
        }
        public Task<IList<string>> GetWidgetZonesAsync()
        {
            return Task.FromResult<IList<string>>(new List<string> { "head_html_tag", "body_end_html_tag_before" });
        }

        public override string GetConfigurationPageUrl()
        {
            return _webHelper.GetStoreLocation() + "Admin/WidgetsTracker/Configure";
        }
        public override async Task InstallAsync()
        {
            var settings = new TrackerSettings
            {
                TrackingScript = DEFAULT_TRACKINGSCRIPT,
                ConversionScript = DEFAULT_CONVERSIONSCRIPT,
                RemarketingScript = DEFAULT_REMARKETINGSCRIPT,
                ValidKey = false,
            };
            await _settingService.SaveSettingAsync(settings);
           
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ActivationKey", "Activation Key");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ActivationKey.Hint", "Paste the Activation Key Send Via Mail while purchase.");

            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultTrackingScript", "Reload default tracking script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.TrackingScript", "Tracking Script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.TrackingScript.Hint", "Paste the tracking code generated by Google Analytics here.");

            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultConversionScript", "Reload default conversion script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ConversionScript", "Conversion script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ConversionScript.Hint", "Paste the conversion tracking code generated by Google adwords here, and Replace {PRODID},{PAGETYPE},{VALUE},{ORDER_ID},{CUSTOMER_EMAIL},{COUNTRY_CODE},{YYYY-MM-DD},{GTIN},{ORDERTOTAL},{CURRENCY}.");

            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultRemarketingScript", "Reload default Remarketing script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.RemarketingScript", "Remarketing script");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.RemarketingScript.Hint", "Paste the remarketing script here, and Replace {CATEGORYNAME},{PRODID},{PAGETYPE},{VALUE}.");

            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ValidKey", "ValidKey");
            await _localizationService.AddOrUpdateLocaleResourceAsync("Plugins.Widgets.TrackerScript.ValidKey.Hint", "ValidKey.");



            var store =await _storeContext.GetCurrentStoreAsync();
            var companyAddress = store.CompanyAddress;
            var storeName = store.Name;
            var companyPhoneNumber = store.CompanyPhoneNumber;
            var companyName = store.CompanyName;
            var hosts = store.Hosts;

            var currentUser =await _workContext.GetCurrentCustomerAsync();
            var email = currentUser.Email;
            var customerName = currentUser.Username;

            var json = new
            {
                host = hosts,
                customerName = customerName,
                customerEmail = email,
                storeName = storeName,
                companyName = companyName,
                companyAddress = companyAddress,
                companyPhone = companyPhoneNumber,
                action = "Installed",
                pluginName = "Tracker Script Plugin",
                version = "4.4"
            };

            RestPost(json);

            await base.InstallAsync();
        }


        public override async Task UninstallAsync()
        {

            var store = await _storeContext.GetCurrentStoreAsync();
            var companyAddress = store.CompanyAddress;
            var storeName = store.Name;
            var companyPhone = store.CompanyPhoneNumber;
            var companyName = store.CompanyName;
            var hosts = store.Hosts;

            var currentUser = await _workContext.GetCurrentCustomerAsync();
            var email = currentUser.Email;
            var customerName = currentUser.Username;

            var json = new
            {
                host = hosts,
                customerName = customerName,
                customerEmail = email,
                storeName = storeName,
                companyName = companyName,
                companyAddress = companyAddress,
                companyPhone = companyPhone,
                action = "UnInstalled",
                pluginName = "Tracker Script Plugin",
                version = "4.4"
            };

            RestPost(json);


            await _settingService.DeleteSettingAsync<TrackerSettings>();

            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ActivationKey");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ActivationKey.Hint");

            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultTrackingScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.TrackingScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.TrackingScript.Hint");

            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultConversionScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ConversionScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ConversionScript.Hint");

            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.LoadDefaultRemarketingScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.RemarketingScript");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.RemarketingScript.Hint");

            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ValidKey");
            await _localizationService.DeleteLocaleResourceAsync("Plugins.Widgets.TrackerScript.ValidKey.Hint");


            await base.UninstallAsync();
        }


        private void RestPost(object body)
        {
            try
            {
                HttpContent httpContent = new StringContent(JsonConvert.SerializeObject(body), Encoding.UTF8, "application/json");
                var httpClient = _httpClientFactory.CreateClient(NopHttpDefaults.DefaultHttpClient);
                var response = httpClient.PostAsync("https://signupapi.aroopatech.com/api/info", httpContent).Result;
                if (!response.IsSuccessStatusCode)
                {
                    // _logger.Error($"Tracker Script Plugin POST Info failed. status code: {response.StatusCode} message: {response.Content.ReadAsStringAsync().Result}");
                }
            }
            catch (Exception)
            {
                //_logger.Error("Tracker Script Plugin POST Info.", ex);
            }
        }

    }
}
